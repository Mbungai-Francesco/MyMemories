// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }

model User {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  firstname  String
  lastname   String?
  password   String
  email      String @unique
  tags        Tag[]
  categories   Category[]
  notes       Note[]
}

model Tag {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String  
  description String?
  user        User?   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
  notes       Note[]  @relation(fields: [noteIds], references: [id]) // Many Notes belong to one Category
  noteIds     String[] @db.ObjectId

  @@unique([name, userId])
}

model Category{
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  user        User?   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
  notes       Note[]  // One Category can have many Notes
  
  @@unique([name, userId])
}

model Note{
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String  @unique
  date        DateTime
  time        String
  content     String
  tags        Tag[] @relation(fields: [tagIds], references: [id])    // Many-to-many relationship with Tag
  tagIds      String[]  @db.ObjectId
  category    Category? @relation(fields: [categoryId], references: [id]) // Many Notes belong to one Category
  categoryId  String?   @db.ObjectId
  user        User?   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}